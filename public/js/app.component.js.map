{"version":3,"sources":["app.component.ts"],"names":[],"mappings":"AAAA,8BAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAiB9B,yHAAyH;YAsDzH;gBAEE,sBAAoB,iBAAmC;oBAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;oBACrD,uDAAuD;gBACzD,CAAC;gBAzDH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,QAAQ;wBAClB,UAAU,EAAE,CAAC,0BAAiB,CAAC;wBAC/B,SAAS,EAAE,CAAC,yBAAgB,EAAE,oCAAgB,CAAC;wBAC/C,QAAQ,EAAE,kFAIT;qBACF,CAAC;oBACD,oBAAW,CAAC;wBACX;4BACE,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE,MAAM;4BACZ,SAAS,EAAE,8BAAa;4BACxB,YAAY,EAAE,IAAI;yBACnB;wBACD;4BACE,IAAI,EAAE,wBAAwB;4BAC9B,IAAI,EAAE,uBAAuB;4BAC7B,SAAS,EAAE,8DAA4B;yBACxC;wBACD;4BACE,IAAI,EAAE,uBAAuB;4BAC7B,IAAI,EAAE,sBAAsB;4BAC5B,SAAS,EAAE,6DAA4B;yBACxC;wBACD;4BACE,IAAI,EAAE,mBAAmB;4BACzB,IAAI,EAAE,kBAAkB;4BACxB,SAAS,EAAE,qDAAwB;yBACpC;wBACD;4BACE,IAAI,EAAE,kBAAkB;4BACxB,IAAI,EAAE,iBAAiB;4BACvB,SAAS,EAAE,mDAAuB;yBACnC;wBACD;4BACE,IAAI,EAAE,eAAe;4BACrB,IAAI,EAAE,cAAc;4BACpB,SAAS,EAAE,6CAAoB;yBAChC;wBACD;4BACE,IAAI,EAAE,oBAAoB;4BAC1B,IAAI,EAAE,mBAAmB;4BACzB,SAAS,EAAE,uDAAyB;yBACrC;wBACD;4BACE,IAAI,EAAE,gBAAgB;4BACtB,IAAI,EAAE,eAAe;4BACrB,SAAS,EAAE,+CAAqB;yBACjC;qBACF,CAAC;;gCAAA;gBAeF,mBAAC;YAAD,CAdA,AAcC,IAAA;YAdD,uCAcC,CAAA","file":"app.component.js","sourcesContent":["// This is our Route Component\n\n// Import all of our dependencies\nimport { Component } from 'angular2/core';\nimport { RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from 'angular2/router';\n\nimport { MenuComponent } from './menu.component';\nimport { InstructorClassNameComponent } from './instructor-class-name.component';\nimport { InstructorDashboardComponent } from './instructor-dashboard.component';\nimport { InstructorReadyComponent } from './instructor-ready.component';\nimport { StudentProfileComponent } from './student-profile.component';\nimport { StudentJoinComponent } from './student-join.component';\nimport { StudentDashboardComponent } from './student-dashboard.component';\nimport { StudentReadyComponent } from './student-ready.component';\n\nimport { ClassroomService } from './classroom.service';\n\n// Use the @Component Decorator to define the following class as a component and provide the meta data including the view\n@Component({\n  selector: \"my-app\",\n  directives: [ROUTER_DIRECTIVES],\n  providers: [ROUTER_PROVIDERS, ClassroomService],\n  template: `\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n  `\n})\n@RouteConfig([\n  {\n    path: '/menu',\n    name: 'Menu',\n    component: MenuComponent,\n    useAsDefault: true,\n  },\n  {\n    path: '/Instructor-class-name',\n    name: 'Instructor-class-name',\n    component: InstructorClassNameComponent,\n  },\n  {\n    path: '/instructor-dashboard',\n    name: 'Instructor-dashboard',\n    component: InstructorDashboardComponent,\n  },\n  {\n    path: '/instructor-ready',\n    name: 'Instructor-ready',\n    component: InstructorReadyComponent,\n  },\n  {\n    path: '/student-profile',\n    name: 'Student-profile',\n    component: StudentProfileComponent,\n  },\n  {\n    path: '/student-join',\n    name: 'Student-join',\n    component: StudentJoinComponent,\n  },\n  {\n    path: '/student-dashboard',\n    name: 'Student-dashboard',\n    component: StudentDashboardComponent,\n  },\n  {\n    path: '/student-ready',\n    name: 'Student-ready',\n    component: StudentReadyComponent,\n  },\n])\nexport class AppComponent{\n\n  constructor(private _classroomService: ClassroomService) {\n    // this.appRoutes = this._classroomService.getRoutes();\n  }\n  // //CLASS PROPERTIES\n  // navHeader: string = \"Ready\";\n  //\n  // //decide what status message should be based upon connection\n  // statusMessage():string {\n  //     if (!this.server.loading && this.server.connected) return \"connected\"\n  //     if (!this.server.loading && !this.server.connected) return \"disconnected\"\n  //     return \"loading\"\n  // }\n}\n"],"sourceRoot":"/source/"}