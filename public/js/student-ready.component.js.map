{"version":3,"sources":["student-ready.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAsBA;gBAIE,+BACU,OAAe,EACf,iBAAmC;oBADnC,YAAO,GAAP,OAAO,CAAQ;oBACf,sBAAiB,GAAjB,iBAAiB,CAAkB;oBAE3C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;oBACzE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,CAAC;oBACzF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;oBACnE,qBAAqB;gBACrB,CAAC;gBACD,4CAAY,GAAZ;oBACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACxC,CAAC;gBACD,+CAAe,GAAf;oBACE,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;gBAC3C,CAAC;gBAnCH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,MAAM,EAAE,CAAC,6BAGR,CAAC;wBACF,QAAQ,EAAE,+YAQT;qBACF,CAAC;;yCAAA;gBA0BF,4BAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBD,yDAwBC,CAAA","file":"student-ready.component.js","sourcesContent":["import { Component } from 'angular2/core';\nimport { Router } from 'angular2/router';\nimport { ClassroomService } from './classroom.service';\nimport { StudentConnections, TotalNumberOfReadyStudents, IsStudentReady } from './interface';\n\n@Component({\n  selector: 'student-ready',\n  styles: [`\n    .chicken {\n    }\n  `],\n  template: `\n  <h1>StudentReady Component</h1>\n  <h3> {{totalNumberOfReadyStudents.number}}/ {{studentConnections.number}}</h3>\n  <h4>STUDENTS ARE READY</h4>\n  <div [ngSwitch]=\"isStudentReady.status\">\n      <button *ngSwitchWhen=\"false\" (click)=\"studentReady()\">I'm ready</button>\n      <button *ngSwitchWhen=\"true\" (click)=\"studentNotReady()\">Actually, I need more time</button>\n  </div>\n  `,\n})\n\nexport class StudentReadyComponent {\n  studentConnections: StudentConnections;\n  totalNumberOfReadyStudents: TotalNumberOfReadyStudents;\n  isStudentReady: IsStudentReady;\n  constructor(\n    private _router: Router,\n    private _classroomService: ClassroomService\n  ){\n    this.studentConnections = this._classroomService.getStudentConnections();\n    this.totalNumberOfReadyStudents = this._classroomService.getTotalNumberOfReadyStudents();\n    this.isStudentReady = this._classroomService.getIsStudentReady();\n  // end of constructor\n  }\n  studentReady(){\n    this._classroomService.studentReady();\n  }\n  studentNotReady(){\n    this._classroomService.studentNotReady();\n  }\n  //when student presses btn studentReady(), socket emits studentReady()\n  //server listens for studentReady() event:\n  //connection ready = true; update instructor & student dashboard, no of ready peeps\n  //student button to not\n\n}\n"],"sourceRoot":"/source/"}